# ===========================================
# ProbeOps API - Development Docker Compose Configuration
# ===========================================
# This docker-compose file sets up the ProbeOps API with PostgreSQL for local development.
# For production deployment, use docker-compose.backend.yml instead.

services:
  # ProbeOps API service
  api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - ENVIRONMENT=${ENVIRONMENT:-development}
    image: probeops-api:${TAG:-latest}
    container_name: probeops-api
    restart: unless-stopped
    ports:
      - "${API_PORT:-5000}:5000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - DOCKER_ENV=1
      - POSTGRES_HOST=db
    networks:
      - probeops-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${API_PORT:-5000}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    # For development only - comment out in production
    volumes:
      - ./:/app

  # PostgreSQL database service
  db:
    image: postgres:15-alpine
    container_name: probeops-db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      # Optional: Add initialization scripts if needed
      # - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      # Comment out in production to prevent external connections
      - "${DB_PORT:-5432}:5432"
    networks:
      - probeops-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# Volumes for persistent data
volumes:
  postgres_data:
    name: probeops-postgres-data

# Network for service communication
networks:
  probeops-network:
    name: probeops-network
    driver: bridge