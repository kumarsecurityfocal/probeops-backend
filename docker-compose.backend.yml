# ===========================================
# ProbeOps API - Backend Production Configuration
# ===========================================
# This docker-compose file is optimized for production deployment of the backend.
# It includes security hardening and resource optimization.

services:
  # ProbeOps API service
  api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - ENVIRONMENT=production
    image: probeops-api:${TAG:-latest}
    container_name: probeops-api
    restart: unless-stopped
    # Removed public port exposure for security
    # API only accessible via internal Docker network
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env.backend
    environment:
      - DOCKER_ENV=1
      - POSTGRES_HOST=db
      - ENVIRONMENT=production
    networks:
      - probeops-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"
    security_opt:
      - no-new-privileges:true
    # No volume mounts in production - use the containerized code

  # PostgreSQL database service
  db:
    image: postgres:15-alpine
    container_name: probeops-db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env.backend
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    # No external port exposure in production for security
    networks:
      - probeops-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"
    security_opt:
      - no-new-privileges:true

# Volumes for persistent data
volumes:
  postgres_data:
    name: probeops-postgres-data

# Network for service communication
networks:
  probeops-network:
    name: probeops-network
    driver: bridge